
/* Функция compose принимает функции, 
   которые поочередно будут вызваны с аргументом(comp). */
const compose = (...funcs) => (comp) => {
  /* Вызываем функцию f с аргументом comp => f(comp), 
     передаем результат работы функции в wrapped => wrapped = f(comp), 
     далее в виде аргумента comp будет выступать wrapped,
     когда все функции будут вызваны, то вернется результат вызова последней функции. */
  return funcs.reduceRight(
    (wrapped, f) => f(wrapped), comp); // Аргумент comp будет передан первой функции (начально значение)
};

export default compose;